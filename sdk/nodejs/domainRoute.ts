// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DomainRoute extends pulumi.CustomResource {
    /**
     * Get an existing DomainRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainRouteState, opts?: pulumi.CustomResourceOptions): DomainRoute {
        return new DomainRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cpln:index/domainRoute:DomainRoute';

    /**
     * Returns true if the given object is an instance of DomainRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainRoute.__pulumiType;
    }

    public readonly domainLink!: pulumi.Output<string>;
    public readonly domainPort!: pulumi.Output<number | undefined>;
    public readonly hostPrefix!: pulumi.Output<string | undefined>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly prefix!: pulumi.Output<string>;
    public readonly replacePrefix!: pulumi.Output<string | undefined>;
    public readonly workloadLink!: pulumi.Output<string>;

    /**
     * Create a DomainRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainRouteArgs | DomainRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainRouteState | undefined;
            resourceInputs["domainLink"] = state ? state.domainLink : undefined;
            resourceInputs["domainPort"] = state ? state.domainPort : undefined;
            resourceInputs["hostPrefix"] = state ? state.hostPrefix : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["replacePrefix"] = state ? state.replacePrefix : undefined;
            resourceInputs["workloadLink"] = state ? state.workloadLink : undefined;
        } else {
            const args = argsOrState as DomainRouteArgs | undefined;
            if ((!args || args.domainLink === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainLink'");
            }
            if ((!args || args.prefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'prefix'");
            }
            if ((!args || args.workloadLink === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workloadLink'");
            }
            resourceInputs["domainLink"] = args ? args.domainLink : undefined;
            resourceInputs["domainPort"] = args ? args.domainPort : undefined;
            resourceInputs["hostPrefix"] = args ? args.hostPrefix : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["replacePrefix"] = args ? args.replacePrefix : undefined;
            resourceInputs["workloadLink"] = args ? args.workloadLink : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainRoute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainRoute resources.
 */
export interface DomainRouteState {
    domainLink?: pulumi.Input<string>;
    domainPort?: pulumi.Input<number>;
    hostPrefix?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    prefix?: pulumi.Input<string>;
    replacePrefix?: pulumi.Input<string>;
    workloadLink?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DomainRoute resource.
 */
export interface DomainRouteArgs {
    domainLink: pulumi.Input<string>;
    domainPort?: pulumi.Input<number>;
    hostPrefix?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    prefix: pulumi.Input<string>;
    replacePrefix?: pulumi.Input<string>;
    workloadLink: pulumi.Input<string>;
}
