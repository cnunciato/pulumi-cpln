// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Identity extends pulumi.CustomResource {
    /**
     * Get an existing Identity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityState, opts?: pulumi.CustomResourceOptions): Identity {
        return new Identity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cpln:index/identity:Identity';

    /**
     * Returns true if the given object is an instance of Identity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Identity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Identity.__pulumiType;
    }

    public readonly awsAccessPolicy!: pulumi.Output<outputs.IdentityAwsAccessPolicy | undefined>;
    public readonly azureAccessPolicy!: pulumi.Output<outputs.IdentityAzureAccessPolicy | undefined>;
    public /*out*/ readonly cplnId!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly gcpAccessPolicy!: pulumi.Output<outputs.IdentityGcpAccessPolicy | undefined>;
    public readonly gvc!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nativeNetworkResources!: pulumi.Output<outputs.IdentityNativeNetworkResource[] | undefined>;
    public readonly networkResources!: pulumi.Output<outputs.IdentityNetworkResource[] | undefined>;
    public readonly ngsAccessPolicy!: pulumi.Output<outputs.IdentityNgsAccessPolicy | undefined>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<{[key: string]: string}>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Identity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityArgs | IdentityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityState | undefined;
            resourceInputs["awsAccessPolicy"] = state ? state.awsAccessPolicy : undefined;
            resourceInputs["azureAccessPolicy"] = state ? state.azureAccessPolicy : undefined;
            resourceInputs["cplnId"] = state ? state.cplnId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gcpAccessPolicy"] = state ? state.gcpAccessPolicy : undefined;
            resourceInputs["gvc"] = state ? state.gvc : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nativeNetworkResources"] = state ? state.nativeNetworkResources : undefined;
            resourceInputs["networkResources"] = state ? state.networkResources : undefined;
            resourceInputs["ngsAccessPolicy"] = state ? state.ngsAccessPolicy : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IdentityArgs | undefined;
            if ((!args || args.gvc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gvc'");
            }
            resourceInputs["awsAccessPolicy"] = args ? args.awsAccessPolicy : undefined;
            resourceInputs["azureAccessPolicy"] = args ? args.azureAccessPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gcpAccessPolicy"] = args ? args.gcpAccessPolicy : undefined;
            resourceInputs["gvc"] = args ? args.gvc : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nativeNetworkResources"] = args ? args.nativeNetworkResources : undefined;
            resourceInputs["networkResources"] = args ? args.networkResources : undefined;
            resourceInputs["ngsAccessPolicy"] = args ? args.ngsAccessPolicy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["cplnId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Identity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Identity resources.
 */
export interface IdentityState {
    awsAccessPolicy?: pulumi.Input<inputs.IdentityAwsAccessPolicy>;
    azureAccessPolicy?: pulumi.Input<inputs.IdentityAzureAccessPolicy>;
    cplnId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    gcpAccessPolicy?: pulumi.Input<inputs.IdentityGcpAccessPolicy>;
    gvc?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nativeNetworkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNativeNetworkResource>[]>;
    networkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNetworkResource>[]>;
    ngsAccessPolicy?: pulumi.Input<inputs.IdentityNgsAccessPolicy>;
    selfLink?: pulumi.Input<string>;
    status?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Identity resource.
 */
export interface IdentityArgs {
    awsAccessPolicy?: pulumi.Input<inputs.IdentityAwsAccessPolicy>;
    azureAccessPolicy?: pulumi.Input<inputs.IdentityAzureAccessPolicy>;
    description?: pulumi.Input<string>;
    gcpAccessPolicy?: pulumi.Input<inputs.IdentityGcpAccessPolicy>;
    gvc: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nativeNetworkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNativeNetworkResource>[]>;
    networkResources?: pulumi.Input<pulumi.Input<inputs.IdentityNetworkResource>[]>;
    ngsAccessPolicy?: pulumi.Input<inputs.IdentityNgsAccessPolicy>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
