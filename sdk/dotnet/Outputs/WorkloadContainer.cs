// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln.Outputs
{

    [OutputType]
    public sealed class WorkloadContainer
    {
        public readonly ImmutableArray<string> Args;
        public readonly string? Command;
        public readonly string? Cpu;
        public readonly ImmutableDictionary<string, string>? Env;
        public readonly Outputs.WorkloadContainerGpuNvidia? GpuNvidia;
        public readonly string Image;
        public readonly bool? InheritEnv;
        public readonly Outputs.WorkloadContainerLifecycle? Lifecycle;
        public readonly Outputs.WorkloadContainerLivenessProbe? LivenessProbe;
        public readonly string? Memory;
        public readonly Outputs.WorkloadContainerMetrics? Metrics;
        public readonly string? MinCpu;
        public readonly string? MinMemory;
        public readonly string Name;
        public readonly int? Port;
        public readonly ImmutableArray<Outputs.WorkloadContainerPort> Ports;
        public readonly Outputs.WorkloadContainerReadinessProbe? ReadinessProbe;
        public readonly ImmutableArray<Outputs.WorkloadContainerVolume> Volumes;
        public readonly string? WorkingDirectory;

        [OutputConstructor]
        private WorkloadContainer(
            ImmutableArray<string> args,

            string? command,

            string? cpu,

            ImmutableDictionary<string, string>? env,

            Outputs.WorkloadContainerGpuNvidia? gpuNvidia,

            string image,

            bool? inheritEnv,

            Outputs.WorkloadContainerLifecycle? lifecycle,

            Outputs.WorkloadContainerLivenessProbe? livenessProbe,

            string? memory,

            Outputs.WorkloadContainerMetrics? metrics,

            string? minCpu,

            string? minMemory,

            string name,

            int? port,

            ImmutableArray<Outputs.WorkloadContainerPort> ports,

            Outputs.WorkloadContainerReadinessProbe? readinessProbe,

            ImmutableArray<Outputs.WorkloadContainerVolume> volumes,

            string? workingDirectory)
        {
            Args = args;
            Command = command;
            Cpu = cpu;
            Env = env;
            GpuNvidia = gpuNvidia;
            Image = image;
            InheritEnv = inheritEnv;
            Lifecycle = lifecycle;
            LivenessProbe = livenessProbe;
            Memory = memory;
            Metrics = metrics;
            MinCpu = minCpu;
            MinMemory = minMemory;
            Name = name;
            Port = port;
            Ports = ports;
            ReadinessProbe = readinessProbe;
            Volumes = volumes;
            WorkingDirectory = workingDirectory;
        }
    }
}
