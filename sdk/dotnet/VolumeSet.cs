// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cpln
{
    [CplnResourceType("cpln:index/volumeSet:VolumeSet")]
    public partial class VolumeSet : global::Pulumi.CustomResource
    {
        [Output("autoscaling")]
        public Output<Outputs.VolumeSetAutoscaling?> Autoscaling { get; private set; } = null!;

        [Output("cplnId")]
        public Output<string> CplnId { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("fileSystemType")]
        public Output<string?> FileSystemType { get; private set; } = null!;

        [Output("gvc")]
        public Output<string> Gvc { get; private set; } = null!;

        [Output("initialCapacity")]
        public Output<int> InitialCapacity { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("performanceClass")]
        public Output<string> PerformanceClass { get; private set; } = null!;

        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("snapshots")]
        public Output<Outputs.VolumeSetSnapshots?> Snapshots { get; private set; } = null!;

        [Output("statuses")]
        public Output<ImmutableArray<Outputs.VolumeSetStatus>> Statuses { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeSet(string name, VolumeSetArgs args, CustomResourceOptions? options = null)
            : base("cpln:index/volumeSet:VolumeSet", name, args ?? new VolumeSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeSet(string name, Input<string> id, VolumeSetState? state = null, CustomResourceOptions? options = null)
            : base("cpln:index/volumeSet:VolumeSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeSet Get(string name, Input<string> id, VolumeSetState? state = null, CustomResourceOptions? options = null)
        {
            return new VolumeSet(name, id, state, options);
        }
    }

    public sealed class VolumeSetArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscaling")]
        public Input<Inputs.VolumeSetAutoscalingArgs>? Autoscaling { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("fileSystemType")]
        public Input<string>? FileSystemType { get; set; }

        [Input("gvc", required: true)]
        public Input<string> Gvc { get; set; } = null!;

        [Input("initialCapacity", required: true)]
        public Input<int> InitialCapacity { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("performanceClass", required: true)]
        public Input<string> PerformanceClass { get; set; } = null!;

        [Input("snapshots")]
        public Input<Inputs.VolumeSetSnapshotsArgs>? Snapshots { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VolumeSetArgs()
        {
        }
        public static new VolumeSetArgs Empty => new VolumeSetArgs();
    }

    public sealed class VolumeSetState : global::Pulumi.ResourceArgs
    {
        [Input("autoscaling")]
        public Input<Inputs.VolumeSetAutoscalingGetArgs>? Autoscaling { get; set; }

        [Input("cplnId")]
        public Input<string>? CplnId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("fileSystemType")]
        public Input<string>? FileSystemType { get; set; }

        [Input("gvc")]
        public Input<string>? Gvc { get; set; }

        [Input("initialCapacity")]
        public Input<int>? InitialCapacity { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("performanceClass")]
        public Input<string>? PerformanceClass { get; set; }

        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("snapshots")]
        public Input<Inputs.VolumeSetSnapshotsGetArgs>? Snapshots { get; set; }

        [Input("statuses")]
        private InputList<Inputs.VolumeSetStatusGetArgs>? _statuses;
        public InputList<Inputs.VolumeSetStatusGetArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.VolumeSetStatusGetArgs>());
            set => _statuses = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VolumeSetState()
        {
        }
        public static new VolumeSetState Empty => new VolumeSetState();
    }
}
