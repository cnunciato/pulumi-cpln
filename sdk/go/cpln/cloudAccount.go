// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cpln

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-cpln/sdk/go/cpln/internal"
)

type CloudAccount struct {
	pulumi.CustomResourceState

	Aws                   CloudAccountAwsPtrOutput   `pulumi:"aws"`
	Azure                 CloudAccountAzurePtrOutput `pulumi:"azure"`
	CplnId                pulumi.StringOutput        `pulumi:"cplnId"`
	Description           pulumi.StringPtrOutput     `pulumi:"description"`
	Gcp                   CloudAccountGcpPtrOutput   `pulumi:"gcp"`
	GcpRoles              pulumi.StringArrayOutput   `pulumi:"gcpRoles"`
	GcpServiceAccountName pulumi.StringOutput        `pulumi:"gcpServiceAccountName"`
	Name                  pulumi.StringOutput        `pulumi:"name"`
	Ngs                   CloudAccountNgsPtrOutput   `pulumi:"ngs"`
	SelfLink              pulumi.StringOutput        `pulumi:"selfLink"`
	Tags                  pulumi.StringMapOutput     `pulumi:"tags"`
}

// NewCloudAccount registers a new resource with the given unique name, arguments, and options.
func NewCloudAccount(ctx *pulumi.Context,
	name string, args *CloudAccountArgs, opts ...pulumi.ResourceOption) (*CloudAccount, error) {
	if args == nil {
		args = &CloudAccountArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudAccount
	err := ctx.RegisterResource("cpln:index/cloudAccount:CloudAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAccount gets an existing CloudAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAccountState, opts ...pulumi.ResourceOption) (*CloudAccount, error) {
	var resource CloudAccount
	err := ctx.ReadResource("cpln:index/cloudAccount:CloudAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAccount resources.
type cloudAccountState struct {
	Aws                   *CloudAccountAws   `pulumi:"aws"`
	Azure                 *CloudAccountAzure `pulumi:"azure"`
	CplnId                *string            `pulumi:"cplnId"`
	Description           *string            `pulumi:"description"`
	Gcp                   *CloudAccountGcp   `pulumi:"gcp"`
	GcpRoles              []string           `pulumi:"gcpRoles"`
	GcpServiceAccountName *string            `pulumi:"gcpServiceAccountName"`
	Name                  *string            `pulumi:"name"`
	Ngs                   *CloudAccountNgs   `pulumi:"ngs"`
	SelfLink              *string            `pulumi:"selfLink"`
	Tags                  map[string]string  `pulumi:"tags"`
}

type CloudAccountState struct {
	Aws                   CloudAccountAwsPtrInput
	Azure                 CloudAccountAzurePtrInput
	CplnId                pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	Gcp                   CloudAccountGcpPtrInput
	GcpRoles              pulumi.StringArrayInput
	GcpServiceAccountName pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	Ngs                   CloudAccountNgsPtrInput
	SelfLink              pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
}

func (CloudAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountState)(nil)).Elem()
}

type cloudAccountArgs struct {
	Aws         *CloudAccountAws   `pulumi:"aws"`
	Azure       *CloudAccountAzure `pulumi:"azure"`
	Description *string            `pulumi:"description"`
	Gcp         *CloudAccountGcp   `pulumi:"gcp"`
	Name        *string            `pulumi:"name"`
	Ngs         *CloudAccountNgs   `pulumi:"ngs"`
	Tags        map[string]string  `pulumi:"tags"`
}

// The set of arguments for constructing a CloudAccount resource.
type CloudAccountArgs struct {
	Aws         CloudAccountAwsPtrInput
	Azure       CloudAccountAzurePtrInput
	Description pulumi.StringPtrInput
	Gcp         CloudAccountGcpPtrInput
	Name        pulumi.StringPtrInput
	Ngs         CloudAccountNgsPtrInput
	Tags        pulumi.StringMapInput
}

func (CloudAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountArgs)(nil)).Elem()
}

type CloudAccountInput interface {
	pulumi.Input

	ToCloudAccountOutput() CloudAccountOutput
	ToCloudAccountOutputWithContext(ctx context.Context) CloudAccountOutput
}

func (*CloudAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccount)(nil)).Elem()
}

func (i *CloudAccount) ToCloudAccountOutput() CloudAccountOutput {
	return i.ToCloudAccountOutputWithContext(context.Background())
}

func (i *CloudAccount) ToCloudAccountOutputWithContext(ctx context.Context) CloudAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountOutput)
}

func (i *CloudAccount) ToOutput(ctx context.Context) pulumix.Output[*CloudAccount] {
	return pulumix.Output[*CloudAccount]{
		OutputState: i.ToCloudAccountOutputWithContext(ctx).OutputState,
	}
}

// CloudAccountArrayInput is an input type that accepts CloudAccountArray and CloudAccountArrayOutput values.
// You can construct a concrete instance of `CloudAccountArrayInput` via:
//
//	CloudAccountArray{ CloudAccountArgs{...} }
type CloudAccountArrayInput interface {
	pulumi.Input

	ToCloudAccountArrayOutput() CloudAccountArrayOutput
	ToCloudAccountArrayOutputWithContext(context.Context) CloudAccountArrayOutput
}

type CloudAccountArray []CloudAccountInput

func (CloudAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccount)(nil)).Elem()
}

func (i CloudAccountArray) ToCloudAccountArrayOutput() CloudAccountArrayOutput {
	return i.ToCloudAccountArrayOutputWithContext(context.Background())
}

func (i CloudAccountArray) ToCloudAccountArrayOutputWithContext(ctx context.Context) CloudAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountArrayOutput)
}

func (i CloudAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]*CloudAccount] {
	return pulumix.Output[[]*CloudAccount]{
		OutputState: i.ToCloudAccountArrayOutputWithContext(ctx).OutputState,
	}
}

// CloudAccountMapInput is an input type that accepts CloudAccountMap and CloudAccountMapOutput values.
// You can construct a concrete instance of `CloudAccountMapInput` via:
//
//	CloudAccountMap{ "key": CloudAccountArgs{...} }
type CloudAccountMapInput interface {
	pulumi.Input

	ToCloudAccountMapOutput() CloudAccountMapOutput
	ToCloudAccountMapOutputWithContext(context.Context) CloudAccountMapOutput
}

type CloudAccountMap map[string]CloudAccountInput

func (CloudAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccount)(nil)).Elem()
}

func (i CloudAccountMap) ToCloudAccountMapOutput() CloudAccountMapOutput {
	return i.ToCloudAccountMapOutputWithContext(context.Background())
}

func (i CloudAccountMap) ToCloudAccountMapOutputWithContext(ctx context.Context) CloudAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountMapOutput)
}

func (i CloudAccountMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*CloudAccount] {
	return pulumix.Output[map[string]*CloudAccount]{
		OutputState: i.ToCloudAccountMapOutputWithContext(ctx).OutputState,
	}
}

type CloudAccountOutput struct{ *pulumi.OutputState }

func (CloudAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccount)(nil)).Elem()
}

func (o CloudAccountOutput) ToCloudAccountOutput() CloudAccountOutput {
	return o
}

func (o CloudAccountOutput) ToCloudAccountOutputWithContext(ctx context.Context) CloudAccountOutput {
	return o
}

func (o CloudAccountOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudAccount] {
	return pulumix.Output[*CloudAccount]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountOutput) Aws() CloudAccountAwsPtrOutput {
	return o.ApplyT(func(v *CloudAccount) CloudAccountAwsPtrOutput { return v.Aws }).(CloudAccountAwsPtrOutput)
}

func (o CloudAccountOutput) Azure() CloudAccountAzurePtrOutput {
	return o.ApplyT(func(v *CloudAccount) CloudAccountAzurePtrOutput { return v.Azure }).(CloudAccountAzurePtrOutput)
}

func (o CloudAccountOutput) CplnId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.CplnId }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CloudAccountOutput) Gcp() CloudAccountGcpPtrOutput {
	return o.ApplyT(func(v *CloudAccount) CloudAccountGcpPtrOutput { return v.Gcp }).(CloudAccountGcpPtrOutput)
}

func (o CloudAccountOutput) GcpRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringArrayOutput { return v.GcpRoles }).(pulumi.StringArrayOutput)
}

func (o CloudAccountOutput) GcpServiceAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.GcpServiceAccountName }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) Ngs() CloudAccountNgsPtrOutput {
	return o.ApplyT(func(v *CloudAccount) CloudAccountNgsPtrOutput { return v.Ngs }).(CloudAccountNgsPtrOutput)
}

func (o CloudAccountOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type CloudAccountArrayOutput struct{ *pulumi.OutputState }

func (CloudAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccount)(nil)).Elem()
}

func (o CloudAccountArrayOutput) ToCloudAccountArrayOutput() CloudAccountArrayOutput {
	return o
}

func (o CloudAccountArrayOutput) ToCloudAccountArrayOutputWithContext(ctx context.Context) CloudAccountArrayOutput {
	return o
}

func (o CloudAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*CloudAccount] {
	return pulumix.Output[[]*CloudAccount]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountArrayOutput) Index(i pulumi.IntInput) CloudAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudAccount {
		return vs[0].([]*CloudAccount)[vs[1].(int)]
	}).(CloudAccountOutput)
}

type CloudAccountMapOutput struct{ *pulumi.OutputState }

func (CloudAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccount)(nil)).Elem()
}

func (o CloudAccountMapOutput) ToCloudAccountMapOutput() CloudAccountMapOutput {
	return o
}

func (o CloudAccountMapOutput) ToCloudAccountMapOutputWithContext(ctx context.Context) CloudAccountMapOutput {
	return o
}

func (o CloudAccountMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*CloudAccount] {
	return pulumix.Output[map[string]*CloudAccount]{
		OutputState: o.OutputState,
	}
}

func (o CloudAccountMapOutput) MapIndex(k pulumi.StringInput) CloudAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudAccount {
		return vs[0].(map[string]*CloudAccount)[vs[1].(string)]
	}).(CloudAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountInput)(nil)).Elem(), &CloudAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountArrayInput)(nil)).Elem(), CloudAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountMapInput)(nil)).Elem(), CloudAccountMap{})
	pulumi.RegisterOutputType(CloudAccountOutput{})
	pulumi.RegisterOutputType(CloudAccountArrayOutput{})
	pulumi.RegisterOutputType(CloudAccountMapOutput{})
}
